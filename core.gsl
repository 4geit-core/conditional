.template 0
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Authors:
# Caner Candan <caner@candan.fr>, http://caner.candan.fr
#

function global.conditional__if_else(antecedent, consequent, alternate)
  return my.antecedent ?? my.consequent ? my.alternate
endfunction

function global.conditional__ifdef_else(antecedent, consequent, alternate)
  return conditional__if_else(defined(my.antecedent), my.consequent, my.alternate)
endfunction

function global.conditional__if_else_empty(antecedent, consequent)
  return conditional__if_else(my.antecedent, my.consequent, "")
endfunction

function global.conditional__ifdef_else_empty(antecedent, consequent)
  return conditional__ifdef_else(my.antecedent, my.consequent, "")
endfunction

function global.conditional__is_default(value, fallback)
  return conv.number(my.value ? my.fallback) = my.fallback
endfunction

function global.conditional__is_xml_true(value)
  return ((my.value ? xml_false) = xml_true)
endfunction

function global.conditional__check_arg_missing(ctx, key, value)
  if !defined(my.value)
    error('arg "$(my.key:)" is missing', my.ctx)
  endif
endfunction

conditional__xml_false = "false"
conditional__xml_true = "true"

.endtemplate